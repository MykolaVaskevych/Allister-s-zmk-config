/*
 * Copyright (c) 2024 Allister MacLeod
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>


// Things to try next:
// - more stuff in the keyboard control layer, like stuff on the right half
// - nicer slash on Dvorak layer, sacrificing dedicated enter key


#define DEFAULT 0
#define QWERTY  0
#define DVORAK  1
#define COLEMAK 2
// 3
// 4
// 5
// 6
#define SYM     7
#define NAV     8
#define NUMPAD  9
#define NUMLOCK 10
#define KEEBCTL 11


// Space Cadet shift/parenthesis macros.
#define SC_LEFT  &mt LSHIFT LPAR
#define SC_RIGHT &mt RSHIFT RPAR


// Map of key positions:
//  0  1  2  3  4  5          6  7  8  9 10 11
// 12 13 14 15 16 17         18 19 20 21 22 23
// 24 25 26 27 28 29         30 31 32 33 34 35
// 36 37 38 39 40 41 42   43 44 45 46 47 48 49
//         50 51 52 53     54 55 56 57
//
// Note: 42 and 43 are offset 1/2 key upward, between bottom row and home row.
// The "main thumb keys" 53 and 54 are 1.5u bars set diagonally.

/ {

combos {
  compatible = "zmk,combos";
  // Both main thumb keys to trigger caps word.
  combo_caps_word {
    timeout-ms = <50>;
    key-positions = <53 54>;
    bindings = <&caps_word>;
  };
  // Corners of left thumb cluster for keyboard control.
  combo_keyboard_control {
    timeout-ms = <50>;
    key-positions = <50 42>;
    bindings = <&slx KEEBCTL>;
  };
};

behaviors {
  slx: sticky_layer_extended {
    compatible = "zmk,behavior-sticky-key";
    #binding-cells = <1>;
    bindings = <&mo>;
    release-after-ms = <8000>;
  };
  // // Mod-morph for ignoring shift on a key pressed with ctrl.
  // // This will prevent caps-word from causing unexpected shift-ctrl-key presses.
  // lclc: lowercase_always_control {
  //   compatible = "zmk,behavior-mod-morph";
  //   #binding-cells = <0>;
  //   mods = 
  //   keep-mods = <(MOD_LCTL)>;
  // };
};

conditional_layers {
  compatible = "zmk,conditional-layers";
  numeric_momentary {
    if-layers = <NAV SYM>;
    then-layer = <NUMPAD>;
  };
  numeric_lock {
    if-layers = <NUMLOCK>;
    then-layer = <NUMPAD>;
  };
};

keymap {
  compatible = "zmk,keymap";

  qwerty_layer {
// ,-----------------------------------.             ,-----------------------------------.
// | Esc |  1  |  2  |  3  |  4  |  5  |             |  6  |  7  |  8  |  9  |  0  | Bks |
// | Tab |  Q  |  W  |  E  |  R  |  T  |             |  Y  |  U  |  I  |  O  |  P  | Ret |
// | Ctl |  A  |  S  |  D  |  F  |  G  |-----. ,-----|  H  |  J  |  K  |  L  |  ;  |  '  |
// |Shf/(|  Z  |  X  |  C  |  V  |  B  |  [  | |  ]  |  N  |  M  |  ,  |  .  |  /  |)/Shf|
// `----------------| Alt | GUI | SYM | Spc |   | Spc | NAV | Bks |KBCTL|----------------'
    bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp ENTER
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
SC_LEFT   &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH SC_RIGHT
                      &kp LALT &kp LGUI &mo SYM &kp SPACE   &kp SPACE &mo NAV &kp BSPC &mo KEEBCTL
    >;
    display-name = "QWERTY";
  };

  dvorak_layer {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |  '  |  ,  |  .  |  P  |  Y  |             |  F  |  G  |  C  |  R  |  L  |  /  |
// |     |  A  |  O  |  E  |  U  |  I  |-----. ,-----|  D  |  H  |  T  |  N  |  S  |  -  |
// |     |  ;  |  Q  |  J  |  K  |  X  |     | |     |  B  |  M  |  W  |  V  |  Z  |     |
// `----------------|     |     |     |     |   |     |     |     |     |----------------'
    bindings = <
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &kp SQT  &kp COMMA &kp DOT &kp P &kp Y                 &kp F  &kp G  &kp C  &kp R  &kp L  &kp FSLH
&trans &kp A    &kp O     &kp E   &kp U &kp I                 &kp D  &kp H  &kp T  &kp N  &kp S  &kp MINUS
&trans &kp SEMI &kp Q     &kp J   &kp K &kp X &trans   &trans &kp B  &kp M  &kp W  &kp V  &kp Z  &trans
                   &trans &trans &trans &trans            &trans &trans &trans &trans
    >;
    display-name = "Dvorak";
  };

  colemak_dh_layer {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |  Q  |  W  |  F  |  P  |  B  |             |  J  |  L  |  U  |  Y  |  ;  |     |
// |     |  A  |  R  |  S  |  T  |  G  |-----. ,-----|  M  |  N  |  E  |  I  |  O  |  '  |
// |     |  Z  |  X  |  C  |  D  |  V  |     | |     |  K  |  H  |  ,  |  .  |  /  |     |
// `----------------|     |     |     |     |   |     |     |     |     |----------------'
    bindings = <
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &kp Q  &kp W  &kp F  &kp P  &kp B                      &kp J  &kp L  &kp U  &kp Y  &kp SEMI &trans
&trans &kp A  &kp R  &kp S  &kp T  &kp G                      &kp M  &kp N  &kp E  &kp I  &kp O    &kp SQT
&trans &kp Z  &kp X  &kp C  &kp D  &kp V &trans        &trans &kp K  &kp H  &kp COMMA &kp DOT &kp FSLH &trans
                   &trans &trans &trans &trans            &trans &trans &trans &trans
    >;
    display-name = "Colemak";
  };

  empty_layer_03 {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |-----. ,-----|     |     |     |     |     |     |
// |     |     |     |     |     |     |     | |     |     |     |     |     |     |     |
// `----------------|     |     |     |     |   |     |     |     |     |----------------'
    bindings = <
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans &trans
                   &trans &trans &trans &trans            &trans &trans &trans &trans
    >;
  };

  empty_layer_04 {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |-----. ,-----|     |     |     |     |     |     |
// |     |     |     |     |     |     |     | |     |     |     |     |     |     |     |
// `----------------|     |     |     |     |   |     |     |     |     |----------------'
    bindings = <
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans &trans
                   &trans &trans &trans &trans            &trans &trans &trans &trans
    >;
  };

  empty_layer_05 {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |-----. ,-----|     |     |     |     |     |     |
// |     |     |     |     |     |     |     | |     |     |     |     |     |     |     |
// `----------------|     |     |     |     |   |     |     |     |     |----------------'
    bindings = <
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans &trans
                   &trans &trans &trans &trans            &trans &trans &trans &trans
    >;
  };

  empty_layer_06 {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |     |     |     |     |     |-----. ,-----|     |     |     |     |     |     |
// |     |     |     |     |     |     |     | |     |     |     |     |     |     |     |
// `----------------|     |     |     |     |   |     |     |     |     |----------------'
    bindings = <
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans &trans
                   &trans &trans &trans &trans            &trans &trans &trans &trans
    >;
  };

  symbol_layer {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     |  `  |  <  |  >  |  "  |  '  |             |  &  |  :  |  [  |  ]  |  _  |     |
// |     |  !  |  -  |  +  |  =  |  #  |-----. ,-----|  |  |  ;  |  {  |  }  |  ?  |     |
// |     |  ~  |  /  |  *  |  %  |  @  |     | |     |  ^  |  $  |  (  |  )  |  /  |     |
// `----------------|     |     |#####|XXXXX|   | Ret | NUM |  \  |     |----------------'
    bindings = <
&trans &trans    &trans    &trans   &trans      &trans                 &trans    &trans     &trans   &trans   &trans    &trans
&trans &kp GRAVE &kp LT    &kp GT   &kp DQT     &kp SQT                &kp AMPS  &kp COLON  &kp LBKT &kp RBKT &kp UNDER &trans
&trans &kp EXCL  &kp MINUS &kp PLUS &kp EQUAL   &kp HASH               &kp PIPE  &kp SEMI   &kp LBRC &kp RBRC &kp QMARK &trans
&trans &kp TILDE &kp SLASH &kp STAR &kp PERCENT &kp AT &trans   &trans &kp CARET &kp DOLLAR &kp LPAR &kp RPAR &kp SLASH &trans
                                &trans &trans &trans &none        &kp RET &trans &kp BSLH &trans
    >;
    display-name = "SYM";
  };

  navigation_layer {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     | ^Q  | ^W  | ^E  | ^R  | ^T  |             | Home| PgD | Up  | PgU |XXXXX|     |
// |     | ^A  | ^S  | ^D  | ^F  | ^G  |-----. ,-----| End | Left| Down|Right|XXXXX|     |
// |     | ^Z  | ^X  | ^C  | ^V  | Del |     | |     | Ins | Ctrl|Shift| Alt | GUI |     |
// `----------------|     |     | NUM |     |   |     |#####|     |     |----------------'
    bindings = <
&trans &trans &trans &trans  &trans  &trans                                &trans   &trans    &trans     &trans    &trans   &trans
&trans &kp LC(Q) &kp LC(W) &kp LC(E) &kp LC(R) &kp LC(T)                   &kp HOME &kp PG_DN &kp UP     &kp PG_UP &none    &trans
&trans &kp LC(A) &kp LC(S) &kp LC(D) &kp LC(F) &kp LC(G)                   &kp END  &kp LEFT  &kp DOWN   &kp RIGHT &none    &trans
&trans &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp DEL &trans       &trans &kp INS  &sk RCTRL &sk RSHIFT &sk LALT  &sk RGUI &trans
                           &trans &trans &trans &trans           &trans &trans &trans &trans
    >;
    display-name = "NAV";
  };

  numpad_layer {
// ,-----------------------------------.             ,-----------------------------------.
// |     |     |     |     |     |     |             |     |     |     |     |     |     |
// |     | F1  | F2  | F3  | F4  |XXXXX|             |  *  |  7  |  8  |  9  |  -  |     |
// |     | F5  | F6  | F7  | F8  |XXXXX|-----. ,-----|  /  |  4  |  5  |  6  |  +  |NumLk|
// |     | F9  | F10 | F11 | F12 | Del |     | |     |  0  |  1  |  2  |  3  | Ent |     |
// `----------------|     |     |#####|     |   |  0  |#####|     |  .  |----------------'
    bindings = <
&trans &trans &trans  &trans  &trans  &trans                      &trans          &trans    &trans    &trans    &trans          &trans
&trans &kp F1 &kp F2  &kp F3  &kp F4  &none                       &kp KP_MULTIPLY &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_SUBTRACT &trans
&trans &kp F5 &kp F6  &kp F7  &kp F8  &none                       &kp KP_DIVIDE   &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS     &tog NUMLOCK
&trans &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL &trans       &trans &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_ENTER    &trans
                       &trans &trans &trans &trans           &kp KP_N0 &trans &trans &kp KP_DOT
    >;
    display-name = "Numpad";
  };

num_lock_layer {
    // Only exists to toggle numpad layer lock on and off.
    bindings = <
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans                     &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans &trans &trans
                   &trans &trans &trans &trans            &trans &trans &trans &trans
    >;
    display-name = "NumLOK";
  };

  keyboard_control_layer {
// ,-----------------------------------.             ,-----------------------------------.
// |BTC_C| BT1 | BT2 | BT3 | BT4 | BT5 |             |     |     |     |     |     |     |
// |Dvork|QWRTY|     |     |     |     |             |     |     |     |     |     |     |
// |Colmk|     |     |Dvork|     |     |-----. ,-----|     |     |     |     |     |     |
// |QWRTY|     |     |Colmk|     |BTC_A| DFU | | DFU |     |     |     |     |     |     |
// `----------------|     |     |     |     |   |     |     |     |     |----------------'
    bindings = <
&bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                &trans &trans &trans &trans &trans &trans
&to DVORAK  &to QWERTY   &trans       &trans       &trans       &trans                      &trans &trans &trans &trans &trans &trans
&to COLEMAK &trans       &trans       &to DVORAK   &trans       &trans                      &trans &trans &trans &trans &trans &trans
&to QWERTY  &trans       &trans       &to COLEMAK  &trans       &bt BT_CLR_ALL &bootloader   &bootloader &trans &trans &trans &trans &trans &trans
                                                &trans &trans &trans &tog KEEBCTL      &trans &trans &trans &trans
    >;
    display-name = "KBD CTL";
  };
};
// end keymap
};
